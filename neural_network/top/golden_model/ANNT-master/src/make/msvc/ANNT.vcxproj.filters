<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Neuro">
      <UniqueIdentifier>{bc14cba6-49d8-4745-b330-6eac0c74c024}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Cost Functions">
      <UniqueIdentifier>{04a3fc07-be03-4080-b0a9-30138cfdd254}</UniqueIdentifier>
    </Filter>
    <Filter Include="Tools">
      <UniqueIdentifier>{1b9c3c78-f505-4c7a-8586-e268756b42de}</UniqueIdentifier>
    </Filter>
    <Filter Include="Types">
      <UniqueIdentifier>{28f91c0e-d3ec-408a-98c7-01e6f0c6489a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Optimizers">
      <UniqueIdentifier>{d3c655db-dce7-4a14-ab1c-f0d91fcb1856}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Layers">
      <UniqueIdentifier>{5082de62-3abb-4a07-b4e9-7a26096fe126}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Layers\Activations">
      <UniqueIdentifier>{412e3dce-9c33-4083-b6e1-93fe13fa393a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Network">
      <UniqueIdentifier>{d5b4c896-aaaf-427b-b8d1-6de38e470616}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Layers\Processing">
      <UniqueIdentifier>{b6c2a90c-ed30-474a-83a5-2269e22c884c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Neuro\Network\Training Helpers">
      <UniqueIdentifier>{c79abf40-a3eb-4c93-9a4f-54086b6285a2}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\ICostFunction.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XAbsoluteCost.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XBinaryCrossEntropyCost.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XMSECost.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Config.hpp" />
    <ClInclude Include="..\..\lib\Types\Types.hpp">
      <Filter>Types</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Types\XAlignedAllocator.hpp">
      <Filter>Types</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XCrossEntropyCost.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\INetworkOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XAdagradOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XAdamOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XGradientDescentOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XMomentumOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XNesterovMomentumOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XRMSpropOptimizer.hpp">
      <Filter>Neuro\Optimizers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\IActivationLayer.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XEluActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XLeakyReLuActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XReLuActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XSigmoidActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XSoftMaxActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XTanhActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\ILayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\XFullyConnectedLayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\ITrainableLayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\ANNT.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XNeuralNetwork.hpp">
      <Filter>Neuro\Network</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkTraining.hpp">
      <Filter>Neuro\Network</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\IVectorTools.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XAvxVectorTools.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XCpu.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XSseVectorTools.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XVectorTools.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XDataEncodingTools.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\XConvolutionLayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\IProcessingLayer.hpp">
      <Filter>Neuro\Layers\Processing</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XAveragePooling.hpp">
      <Filter>Neuro\Layers\Processing</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XMaxPooling.hpp">
      <Filter>Neuro\Layers\Processing</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkContext.hpp">
      <Filter>Neuro\Network</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkInference.hpp">
      <Filter>Neuro\Network</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XVectorize.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Tools\XParallel.hpp">
      <Filter>Tools</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Network\XClassificationTrainingHelper.hpp">
      <Filter>Neuro\Network\Training Helpers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XLogSoftMaxActivation.hpp">
      <Filter>Neuro\Layers\Activations</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XNegativeLogLikelihoodCost.hpp">
      <Filter>Neuro\Cost Functions</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XDropOutLayer.hpp">
      <Filter>Neuro\Layers\Processing</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XBatchNormalization.hpp">
      <Filter>Neuro\Layers\Processing</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\LayerIDs.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\XRecurrentLayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\XLSTMLayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
    <ClInclude Include="..\..\lib\Neuro\Layers\XGRULayer.hpp">
      <Filter>Neuro\Layers</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\lib\Neuro\Layers\XFullyConnectedLayer.cpp">
      <Filter>Neuro\Layers</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\ANNT.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkTraining.cpp">
      <Filter>Neuro\Network</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XAvxVectorTools.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XCpu.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XSseVectorTools.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XVectorTools.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XDataEncodingTools.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Layers\XConvolutionLayer.cpp">
      <Filter>Neuro\Layers</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkInference.cpp">
      <Filter>Neuro\Network</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XVectorize.cpp">
      <Filter>Tools</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Network\XClassificationTrainingHelper.cpp">
      <Filter>Neuro\Network\Training Helpers</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Types\XAlignedAllocator.cpp">
      <Filter>Types</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Layers\XRecurrentLayer.cpp">
      <Filter>Neuro\Layers</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkContext.cpp">
      <Filter>Neuro\Network</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Network\XNeuralNetwork.cpp">
      <Filter>Neuro\Network</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Layers\XLSTMLayer.cpp">
      <Filter>Neuro\Layers</Filter>
    </ClCompile>
    <ClCompile Include="..\..\lib\Neuro\Layers\XGRULayer.cpp">
      <Filter>Neuro\Layers</Filter>
    </ClCompile>
  </ItemGroup>
</Project>