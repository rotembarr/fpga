<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\lib\ANNT.hpp" />
    <ClInclude Include="..\..\lib\Config.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\ICostFunction.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XAbsoluteCost.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XBinaryCrossEntropyCost.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XCrossEntropyCost.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XMSECost.hpp" />
    <ClInclude Include="..\..\lib\Neuro\CostFunctions\XNegativeLogLikelihoodCost.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\IActivationLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XEluActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XLeakyReLuActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XLogSoftMaxActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XReLuActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XSigmoidActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XSoftMaxActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Activations\XTanhActivation.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\ILayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\ITrainableLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\LayerIDs.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\IProcessingLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XAveragePooling.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XBatchNormalization.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XDropOutLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\Processing\XMaxPooling.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\XConvolutionLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\XFullyConnectedLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\XGRULayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\XLSTMLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Layers\XRecurrentLayer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XClassificationTrainingHelper.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkContext.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkInference.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XNetworkTraining.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Network\XNeuralNetwork.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\INetworkOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XAdagradOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XAdamOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XGradientDescentOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XMomentumOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XNesterovMomentumOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Neuro\Optimizers\XRMSpropOptimizer.hpp" />
    <ClInclude Include="..\..\lib\Tools\IVectorTools.hpp" />
    <ClInclude Include="..\..\lib\Tools\XAvxVectorTools.hpp" />
    <ClInclude Include="..\..\lib\Tools\XCpu.hpp" />
    <ClInclude Include="..\..\lib\Tools\XDataEncodingTools.hpp" />
    <ClInclude Include="..\..\lib\Tools\XParallel.hpp" />
    <ClInclude Include="..\..\lib\Tools\XSseVectorTools.hpp" />
    <ClInclude Include="..\..\lib\Tools\XVectorize.hpp" />
    <ClInclude Include="..\..\lib\Tools\XVectorTools.hpp" />
    <ClInclude Include="..\..\lib\Types\Types.hpp" />
    <ClInclude Include="..\..\lib\Types\XAlignedAllocator.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\lib\ANNT.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Layers\XConvolutionLayer.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Layers\XFullyConnectedLayer.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Layers\XGRULayer.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Layers\XLSTMLayer.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Layers\XRecurrentLayer.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XClassificationTrainingHelper.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkContext.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkInference.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XNetworkTraining.cpp" />
    <ClCompile Include="..\..\lib\Neuro\Network\XNeuralNetwork.cpp" />
    <ClCompile Include="..\..\lib\Tools\XAvxVectorTools.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XCpu.cpp" />
    <ClCompile Include="..\..\lib\Tools\XDataEncodingTools.cpp" />
    <ClCompile Include="..\..\lib\Tools\XSseVectorTools.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
    </ClCompile>
    <ClCompile Include="..\..\lib\Tools\XVectorize.cpp" />
    <ClCompile Include="..\..\lib\Tools\XVectorTools.cpp" />
    <ClCompile Include="..\..\lib\Types\XAlignedAllocator.cpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{428D26A1-BC29-4CB6-8B9A-8FEF53D1BCAD}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>ANNT</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(ProjectDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(ProjectDir)$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet>NoExtensions</EnableEnhancedInstructionSet>
      <AdditionalIncludeDirectories>../../lib</AdditionalIncludeDirectories>
      <OpenMPSupport>true</OpenMPSupport>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>xcopy /Y "$(TargetPath)" "$(ProjectDir)..\..\..\build\msvc\debug\lib\"
xcopy /SY "$(ProjectDir)..\..\lib\*.hpp" "$(ProjectDir)..\..\..\build\msvc\debug\include\"
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet>NoExtensions</EnableEnhancedInstructionSet>
      <AdditionalIncludeDirectories>../../lib</AdditionalIncludeDirectories>
      <OpenMPSupport>true</OpenMPSupport>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>xcopy /Y "$(TargetPath)" "$(ProjectDir)..\..\..\build\msvc\release\lib\"
xcopy /SY "$(ProjectDir)..\..\lib\*.hpp" "$(ProjectDir)..\..\..\build\msvc\release\include\"
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>